<!-- TreeViewStyles.xaml - Versión genérica -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Axon.UI.Components.TreeNode">

    <!-- Converters -->
    <local:LevelToIndentConverter x:Key="LevelToIndentConverter"/>

    <!-- Estilo para el botón Add -->
    <Style x:Key="TreeViewAddButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="0,0"/>
        <Setter Property="ToolTip" Value="Agregar elemento"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        Padding="2">
                        <Viewbox Width="20" Height="20">
                            <Canvas Background="#01FFFFFF" Width="24" Height="24">
                                <Path Fill="{TemplateBinding Foreground}" 
                                  Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorNeutralBackground3Brush}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorNeutralBackground4Brush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo para el Menu en TreeView -->
    <Style x:Key="TreeViewMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorNeutralBackground3Brush}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Estilo para el MenuItem raíz (el que muestra los tres puntos) -->
    <Style x:Key="TreeViewRootMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="ToolTip" Value="Más opciones"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        Padding="2">
                        <Grid>
                            <!-- Header del MenuItem (los tres puntos) -->
                            <ContentPresenter x:Name="HeaderHost"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True"/>

                            <!-- Popup para los sub-items -->
                            <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder"
                                    SnapsToDevicePixels="True"
                                    Background="{StaticResource ColorNeutralBackground1Brush}"
                                    BorderBrush="{StaticResource ColorNeutralStroke1Brush}"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Padding="2">
                                    <StackPanel IsItemsHost="True"
                                          KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource ColorNeutralBackground3Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource ColorNeutralBackground4HoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Estilo para los sub-MenuItems -->
    <Style x:Key="TreeViewSubMenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource ColorNeutralForeground1Brush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2"
                        Margin="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Icono -->
                            <ContentPresenter x:Name="Icon"
                                        Grid.Column="0"
                                        ContentSource="Icon"
                                        Margin="4,0,8,0"
                                        VerticalAlignment="Center"/>

                            <!-- Texto -->
                            <ContentPresenter x:Name="HeaderHost"
                                        Grid.Column="1"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True"
                                        VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                Value="{StaticResource ColorNeutralBackground2Brush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" 
                                Value="{StaticResource ColorNeutralForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--estilo para separadores de menu-->
    <Style x:Key="TreeViewMenuSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{StaticResource ColorNeutralStroke2Brush}"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="4,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Fill="{TemplateBinding Background}" 
                          Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ESTILO GENÉRICO PARA TreeViewItem -->
    <Style x:Key="GenericTreeViewItemStyle" TargetType="TreeViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ColorNeutralForeground1Brush}"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <!-- Grid principal SIN altura fija -->
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Solo el header -->
                            <RowDefinition Height="*"/>
                            <!-- Los hijos -->
                        </Grid.RowDefinitions>

                        <!-- Header con altura fija y eventos de hover -->
                        <Grid x:Name="HoverArea" 
                              Grid.Row="0"
                              Height="32" 
                              Background="Transparent">

                            <!-- Eventos de hover solo para el header -->
                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="Grid.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="AddButton"
                                                           Storyboard.TargetProperty="Opacity"
                                                           To="1"
                                                           Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="MenuActions"
                                                           Storyboard.TargetProperty="Opacity"
                                                           To="1"
                                                           Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="Grid.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="AddButton"
                                                           Storyboard.TargetProperty="Opacity"
                                                           To="0"
                                                           Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="MenuActions"
                                                           Storyboard.TargetProperty="Opacity"
                                                           To="0"
                                                           Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>

                            <!-- Border que va de lado a lado -->
                            <Border x:Name="ItemBorder"
                                    Background="{TemplateBinding Background}"
                                    Padding="0"
                                    Margin="0"
                                    CornerRadius="{StaticResource BorderRadiusSmall}">

                                <!-- Contenido del header -->
                                <Grid>
                                    <!-- Contenido completo con indentación interna -->
                                    <StackPanel Orientation="Horizontal"
                                              VerticalAlignment="Center">

                                        <!-- Espaciado para indentación basado en Level -->
                                        <Rectangle Width="{Binding Level, Converter={StaticResource LevelToIndentConverter}}" 
                                                 Height="1" 
                                                 Fill="Transparent"/>

                                        <!-- Expander -->
                                        <ToggleButton x:Name="Expander"
                                                    IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Width="24"
                                                    Height="24"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    Margin="0,0,4,0">
                                            <ToggleButton.Template>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Background="Transparent">
                                                        <Viewbox Height="16" Width="16">
                                                            <Path x:Name="pathCollapse" 
                                                                  Data="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" 
                                                                  Fill="{StaticResource TextSecondaryBrush}" 
                                                                  Width="24" 
                                                                  Height="24"/>
                                                        </Viewbox>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="pathCollapse" Property="Data" Value="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ToggleButton.Template>
                                        </ToggleButton>

                                        <!-- Icono personalizable (solo si existe) -->
                                        <Grid x:Name="IconContainer" 
                                              Width="20" 
                                              Height="20" 
                                              Margin="0,0,8,0">
                                            <Viewbox Width="16" Height="16">
                                                <Path Data="{Binding IconPath}" 
                                                      Fill="{StaticResource ColorNeutralForeground1Brush}"
                                                      Stretch="Uniform"/>
                                            </Viewbox>
                                        </Grid>

                                        <!-- Texto del nodo -->
                                        <TextBlock Text="{Binding Title}"
                                                 Foreground="{StaticResource TreeViewNodeForeground}"
                                                 VerticalAlignment="Center"
                                                 FontSize="13"/>
                                    </StackPanel>

                                    <!-- Botones de acción alineados a la derecha -->
                                    <StackPanel Orientation="Horizontal"
            HorizontalAlignment="Right"
            VerticalAlignment="Center" 
            Background="Transparent"
            Margin="8,0">

                                        <!-- Botón para agregar (mantiene el estilo anterior) -->
                                        <Button x:Name="AddButton"
            Style="{StaticResource TreeViewAddButtonStyle}"
            Foreground="{StaticResource ColorNeutralForeground1Brush}"
            Tag="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"
            ToolTip="Agregar elemento"
            Margin="0,0"
            Command="{Binding AddChildCommand}"/>

                                        <!-- NUEVO: Menu en lugar de Button con ContextMenu -->
                                        <Menu x:Name="MenuActions"
          Style="{StaticResource TreeViewMenuStyle}"
          VerticalAlignment="Center">

                                             <!--MenuItem raíz con los tres puntos--> 
                                            <MenuItem Style="{StaticResource TreeViewRootMenuItemStyle}">
                                                <MenuItem.Header>
                                                    <Viewbox Width="20" Height="20">
                                                        <Canvas Background="#01FFFFFF" Width="24" Height="24">
                                                            <Path Fill="{StaticResource ColorNeutralForeground1Brush}" 
                              Data="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                </MenuItem.Header>

                                                 <!--Sub-MenuItems--> 
                                                <MenuItem Style="{StaticResource TreeViewSubMenuItemStyle}" 
                      Header="Agregar elemento" 
                      Command="{Binding AddChildCommand}">
                                                    <MenuItem.Icon>
                                                        <Viewbox Width="16" Height="16">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="{StaticResource ColorNeutralForeground1Brush}" 
                                  Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"/>
                                                            </Canvas>
                                                        </Viewbox>
                                                    </MenuItem.Icon>
                                                </MenuItem>

                                                <MenuItem Style="{StaticResource TreeViewSubMenuItemStyle}" 
                      Header="Eliminar" 
                      Command="{Binding DeleteCommand}">
                                                    <MenuItem.Icon>
                                                        <Viewbox Width="16" Height="16">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="{StaticResource ColorStatusDangerForeground1Brush}" 
                                  Data="M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19M8,9H16V19H8V9M15.5,4L14.5,3H9.5L8.5,4H5V6H19V4H15.5Z"/>
                                                            </Canvas>
                                                        </Viewbox>
                                                    </MenuItem.Icon>
                                                </MenuItem>

                                                <Separator Style="{StaticResource TreeViewMenuSeparatorStyle}"/>

                                                <MenuItem Style="{StaticResource TreeViewSubMenuItemStyle}" 
                      Header="Mover arriba" 
                      Command="{Binding MoveUpCommand}">
                                                    <MenuItem.Icon>
                                                        <Viewbox Width="16" Height="16">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="{StaticResource ColorNeutralForeground1Brush}" 
                                  Data="M7.41,15.41L12,10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z"/>
                                                            </Canvas>
                                                        </Viewbox>
                                                    </MenuItem.Icon>
                                                </MenuItem>

                                                <MenuItem Style="{StaticResource TreeViewSubMenuItemStyle}" 
                      Header="Mover abajo" 
                      Command="{Binding MoveDownCommand}">
                                                    <MenuItem.Icon>
                                                        <Viewbox Width="16" Height="16">
                                                            <Canvas Width="24" Height="24">
                                                                <Path Fill="{StaticResource ColorNeutralForeground1Brush}" 
                                  Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"/>
                                                            </Canvas>
                                                        </Viewbox>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </MenuItem>
                                        </Menu>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>

                        <!-- Contenedor de hijos en la segunda fila -->
                        <ItemsPresenter x:Name="ItemsHost"
                                      Grid.Row="1"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Ocultar expander si no hay hijos -->
                        <DataTrigger Binding="{Binding HasChildren}" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <!-- Controlar visibilidad de hijos -->
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Ocultar icono si no existe -->
                        <DataTrigger Binding="{Binding HasIcon}" Value="False">
                            <Setter TargetName="IconContainer" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IconContainer" Property="Width" Value="0"/>
                            <Setter TargetName="IconContainer" Property="Margin" Value="0"/>
                        </DataTrigger>

                        <!-- Efectos de hover en el área específica -->
                        <Trigger SourceName="HoverArea" Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource TreeViewNodeBackgroundHover}"/>
                        </Trigger>

                        <!-- Estado seleccionado -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemBorder" Property="Background" Value="{StaticResource TreeViewNodeBackgroundSelected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ESTILO GENÉRICO PARA TreeView -->
    <Style x:Key="GenericTreeViewStyle" TargetType="TreeView">
        <Setter Property="Background" Value="{StaticResource ColorNeutralBackground3Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource ColorNeutralForeground2Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColorNeutralBackground3Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource GenericTreeViewItemStyle}"/>
        <!-- Template jerárquico genérico -->
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <Grid/>
                </HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>